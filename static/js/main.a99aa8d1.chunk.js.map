{"version":3,"sources":["index.js"],"names":["calculateWinner","squares","boardSize","lines","i","line","j","push","calculateHorizontalLines","calculateVerticalLines","calculateDiagonalLines","length","hasWon","currentLine","lineOwner","currentSquare","player","Square","props","style","status","backgroundColor","color","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","onClick","value","Board","_this","this","winner","includes","clicked","key","board","boardRows","renderSquare","React","Component","Status","stepNumber","xIsNext","Game","_this2","Object","_home_paolo_Documents_html_tictactoe_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_paolo_Documents_html_tictactoe_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_paolo_Documents_html_tictactoe_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","history","Array","fill","location","col","row","reversed","newBoardSize","boardSizeValid","slice","setState","concat","Math","floor","step","e","preventDefault","target","valid","match","_this3","sortButton","moves","map","m","move","desc","jumpTo","handleClick","type","placeholder","onChange","setBoardSize","changeBoardSize","disabled","reverseOrder","resetGame","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a99aa8d1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction calculateHorizontalLines(lines, boardSize) {\n\tfor (let i = 0; i < boardSize; i++) {\n\t\tlet line = [];\n\n\t\tfor (let j = 0; j < boardSize; j++) {\n\t\t\tline.push((boardSize * i) + j);\n\t\t}\n\n\t\tlines.push(line);\n\t}\n}\n\nfunction calculateVerticalLines(lines, boardSize) {\n\tfor (let i = 0; i < boardSize; i++) {\n\t\tlet line = [];\n\n\t\tfor (let j = 0; j < boardSize; j++) {\n\t\t\tline.push((boardSize * j) + i);\n\t\t}\n\n\t\tlines.push(line);\n\t}\n}\n\nfunction calculateDiagonalLines(lines, boardSize) {\n\tfor (let i = 0; i < 2; i++) {\n\t\tlet line = [];\n\t\t\n\t\tfor (let j = 0; j < boardSize; j++) {\n\t\t\tline.push((+boardSize + (1 - (2 * i))) * (i + j));\n\t\t}\n\n\t\tlines.push(line);\n\t}\n}\n\nfunction calculateWinner(squares, boardSize) {\n\tlet lines = [];\n\n\tcalculateHorizontalLines(lines, boardSize);\n\tcalculateVerticalLines(lines, boardSize);\n\tcalculateDiagonalLines(lines, boardSize);\n\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tlet hasWon = true;\n\t\tlet currentLine = lines[i];\n\t\tlet lineOwner = squares[currentLine[0]];\n\n\t\tfor (let j = 1; j < lines[i].length; j++) {\n\t\t\tlet currentSquare = squares[currentLine[j]];\n\n\t\t\tif (!hasWon || !lineOwner || currentSquare !== lineOwner) {\n\t\t\t\thasWon = false;\n\t\t\t}\n\t\t}\n\n\t\tif (hasWon) {\n\t\t\treturn {\n\t\t\t\tplayer: lineOwner,\n\t\t\t\tline: currentLine,\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n}\n\nfunction Square(props) {\n\tlet style;\n\n\tif (props.status === 'winner') {\n\t\tstyle = {\n\t\t\tbackgroundColor: 'crimson',\n\t\t\tcolor: 'white',\n\t\t};\n\t} else if (props.status === 'clicked') {\n\t\tstyle = {\n\t\t\tcolor: 'crimson',\n\t\t};\n\t}\n\t\n\treturn (\n\t\t<button className=\"square\" onClick={props.onClick} style={style}>\n\t\t\t{props.value}\n\t\t</button>\n\t);\n}\n\nclass Board extends React.Component {\n\trenderSquare(i) {\n\t\tlet status;\n\n\t\tif (this.props.winner && this.props.winner.line.includes(i)) {\n\t\t\tstatus = 'winner';\n\t\t} else if (this.props.clicked === i) {\n\t\t\tstatus = 'clicked';\n\t\t}\n\n\t\treturn (\n\t\t\t<Square \n\t\t\t\tvalue={this.props.squares[i]} \n\t\t\t\tonClick={() => this.props.onClick(i)}\n\t\t\t\tstatus={status}\n\t\t\t\tkey={i}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst boardSize = this.props.boardSize;\n\t\tlet board = [];\n\n\t\tfor (let i = 0; i < boardSize; i++) {\n\t\t\tlet boardRows =[];\n\n\t\t\tfor (let j = 0; j < boardSize; j++) {\n\t\t\t\tboardRows.push(this.renderSquare(boardSize * i + j));\n\t\t\t}\n\n\t\t\tboard.push(<div className=\"board-row\" key={i}>{boardRows}</div>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{board}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction Status(props) {\n\tlet status;\n\n\tif (!props.winner && props.stepNumber >= (props.boardSize * props.boardSize)) {\n\t\tstatus = 'Draw'\n\t} else if (props.winner) {\n\t\tstatus = 'Winner: ' + props.winner.player;\n\t} else {\n\t\tstatus = 'Next player: ' + (props.xIsNext ? 'X' : 'O');\n\t}\n\n\treturn (\n\t\t<div className=\"status\">\n\t\t\t{status}\n\t\t</div>\n\t)\n}\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [{\n\t\t\t\tsquares: Array(9).fill(null),\n\t\t\t}],\n\t\t\tlocation: [{\n\t\t\t\tcol: null,\n\t\t\t\trow: null,\n\t\t\t}],\n\t\t\tstepNumber: 0,\n\t\t\txIsNext: true,\n\t\t\tclicked: null,\n\t\t\treversed: false,\n\t\t\tboardSize: 3,\n\t\t\tnewBoardSize: 3,\n\t\t\tboardSizeValid: false,\n\t\t};\n\t}\n\n\thandleClick(i) {\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\n\t\tconst location = this.state.location.slice(0, this.state.stepNumber + 1);\n\t\tconst squares = history[history.length - 1].squares.slice();\n\n\t\tif (calculateWinner(squares, this.state.boardSize) || squares[i]) {\n\t\t\treturn;\n\t\t}\n\n\t\tsquares[i] = this.state.xIsNext ? 'X' : 'O';\n\t\t\n\t\tthis.setState({\n\t\t\thistory: history.concat([{\n\t\t\t\tsquares: squares,\n\t\t\t}]),\n\t\t\tlocation: location.concat([{\n\t\t\t\tcol: (i % 3),\n\t\t\t\trow: (Math.floor(i / 3)),\n\t\t\t}]),\n\t\t\tstepNumber: history.length,\n\t\t\txIsNext: !this.state.xIsNext,\n\t\t})\n\t}\n\n\tjumpTo(step) {\n\t\tconst location = this.state.location[step];\n\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\txIsNext: (step % 2) === 0,\n\t\t\tclicked: location.col + (3 * location.row),\n\t\t});\n\t}\n\n\treverseOrder() {\n\t\tthis.setState({\n\t\t\treversed: !this.state.reversed,\n\t\t});\n\t}\n\n\tresetGame() {\n\t\tthis.setState({\n\t\t\thistory: [{\n\t\t\t\tsquares: Array(9).fill(null),\n\t\t\t}],\n\t\t\tlocation: [{\n\t\t\t\tcol: null,\n\t\t\t\trow: null,\n\t\t\t}],\n\t\t\tstepNumber: 0,\n\t\t\txIsNext: true,\n\t\t\tclicked: null,\n\t\t\treversed: false,\n\t\t});\n\t}\n\t\n\tchangeBoardSize(e) {\n\t\te.preventDefault();\n\n\t\tthis.setState({\n\t\t\thistory: [{\n\t\t\t\tsquares: Array(9).fill(null),\n\t\t\t}],\n\t\t\tlocation: [{\n\t\t\t\tcol: null,\n\t\t\t\trow: null,\n\t\t\t}],\n\t\t\tstepNumber: 0,\n\t\t\txIsNext: true,\n\t\t\tclicked: null,\n\t\t\treversed: false,\n\t\t\tboardSize: this.state.newBoardSize,\n\t\t});\n\t}\n\n\tsetBoardSize(e) {\n\t\tconst value = e.target.value;\n\t\tconst regex = /^\\d+$/;\n\t\tconst valid = value.match(regex);\n\n\t\tthis.setState({\n\t\t\tboardSizeValid: valid,\n\t\t\tnewBoardSize: valid ? value : this.state.boardSize,\n\t\t});\n\t}\n\n\trender() {\n\t\tconst squares = this.state.history[this.state.stepNumber].squares;\n\t\tconst winner = calculateWinner(squares, this.state.boardSize);\n\t\tconst sortButton = this.state.reversed ? \n\t\t\t'Sort ascending' : \n\t\t\t'Sort descending';\n\n\t\tconst moves = this.state.history.map((step, m) => {\n\t\t\tconst move = this.state.reversed ? this.state.history.length - 1 - m : m;\n\t\t\tconst desc = move ? \n\t\t\t\t'Go to move #' + move + ' (' + this.state.location[move].col + ',' + this.state.location[move].row + ')' : \n\t\t\t\t'Go to game start';\n\n\t\t\treturn (\n\t\t\t\t<li key={move}>\n\t\t\t\t\t<button onClick={() => this.jumpTo(move)}>\n\t\t\t\t\t\t{desc}\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<Board \n\t\t\t\t\t\tsquares={squares}\n\t\t\t\t\t\tonClick={(i) => this.handleClick(i)}\n\t\t\t\t\t\twinner={winner}\n\t\t\t\t\t\tclicked={this.state.clicked}\n\t\t\t\t\t\tboardSize={this.state.boardSize}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-info\">\n\t\t\t\t\t<Status \n\t\t\t\t\t\twinner={winner} \n\t\t\t\t\t\tstepNumber={this.state.stepNumber} \n\t\t\t\t\t\tboardSize={this.state.boardSize} \n\t\t\t\t\t\txIsNext={this.state.xIsNext}/>\n\t\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"tel\" \n\t\t\t\t\t\t\tplaceholder={this.state.boardSize} \n\t\t\t\t\t\t\tonChange={(e) => this.setBoardSize(e)}/>\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tonClick={(e) => this.changeBoardSize(e)} \n\t\t\t\t\t\t\tdisabled={!this.state.boardSizeValid}>\n\t\t\t\t\t\t\tChange board size\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button onClick={() => this.reverseOrder()}>\n\t\t\t\t\t\t\t{sortButton}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button onClick={() => this.resetGame()}>\n\t\t\t\t\t\t\tReset game\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t{moves}\n\t\t\t\t\t</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nReactDOM.render(\n\t<Game />,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}